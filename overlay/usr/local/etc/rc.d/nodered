#!/bin/sh
#
# PROVIDE: nodered
# REQUIRE: LOGIN
# KEYWORD: shutdown
#
# nodered_enable: Set to YES to enable the Node-RED service.
#	    Default: NO
#
# nodered_user:	The user account used to run the Node-RED daemon.
#     This is optional, however do not specifically set this to an
#     empty string as this will cause the daemon to run as root.
#     Default: "nodered"
#
# nodered_group: The group account used to run the Node-RED daemon.
#     This is optional, however do not specifically set this to an
#     empty string as this will cause the daemon to run with group wheel.
#     Default: "nodered"
#
# nodered_config_dir: Use this directory for the user Node-RED daemon
#	    Default: "/var/db/nodered"
#
# nodered_moss: Set and enable `node-red-pi --max-old-space-size`.
#     Default: DISABLED
#     Set 'max-old-space-size=512':  `sysrc nodered_moss=512`
#     Disable 'max-old-space-size':  `sysrc -x nodered_moss`

# -------------------------------------------------------
# Copy this file to '/usr/local/etc/rc.d/nodered'
# `chmod +x /usr/local/etc/rc.d/nodered`
# `sysrc nodered_enable=yes`
# `service nodered start`
# -------------------------------------------------------

name="nodered"
rcvar="${name}_enable"

pidfile_child="/var/run/${name}.pid"
pidfile="/var/run/${name}_daemon.pid"
logfile="/var/log/${name}_daemon.log"

. /etc/rc.subr && load_rc_config ${name}

: "${nodered_enable:=NO}"
: "${nodered_user:=nodered}"
: "${nodered_group:=nodered}"
: "${nodered_config_dir:=/var/db/nodered}"
: "${nodered_moss:=0}"

export HOME="${nodered_config_dir}"
export PATH="${PATH}:/usr/local/sbin:/usr/local/bin"

command="/usr/sbin/daemon"
extra_commands="upgrade"

upgrade_cmd="${name}_upgrade"
nodered_upgrade() {
  run_rc_command stop 2>/dev/null; rc_stop=$?
  #/usr/local/bin/npm cache clean --force
  if /usr/local/bin/npm install -g --unsafe-perm node-red; then
    [ ${rc_stop} = 0 ] && run_rc_command start
  fi
}

start_precmd=${name}_precmd
nodered_precmd() {
  node_red="/usr/local/bin/node-red"
  if [ ${nodered_moss} -gt 0 ]; then
    node_red="bash ${node_red}-pi --max-old-space-size=${nodered_moss}"
    echo "Using max-old-space-size=${nodered_moss}"
  fi

  if [ ! -d "${nodered_config_dir}" ]; then
    install -g "${nodered_group}" -m 775 -o "${nodered_user}" -- /dev/null "${nodered_config_dir}";
  fi

  install -g "${nodered_group}" -o "${nodered_user}" -- /dev/null "${pidfile_child}"
  install -g "${nodered_group}" -o "${nodered_user}" -- /dev/null "${pidfile}"
  install -g "${nodered_group}" -o "${nodered_user}" -- /dev/null "${logfile}"

  rc_flags="-f -o ${logfile} -P ${pidfile} -p ${pidfile_child} ${node_red} -u ${nodered_config_dir}"
}

start_postcmd=${name}_poststart
nodered_poststart() {
  sleep 1
  run_rc_command status
}

stop_postcmd=${name}_postcmd
nodered_postcmd() {
  rm -f -- "${pidfile_child}"
  rm -f -- "${pidfile}"
}

run_rc_command "$1"
